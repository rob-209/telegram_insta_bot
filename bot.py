import os
import re
import json
import requests
import asyncio
import tempfile
import shutil
import instaloader
from dotenv import load_dotenv
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv('TELEGRAM_BOT_TOKEN')

if not TOKEN:
    raise ValueError("‚ùå –¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω! –°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª —Å TELEGRAM_BOT_TOKEN")

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start"""
    await update.message.reply_text(
        "üì∏ Instagram Downloader\n\n"
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞:\n"
        "‚Ä¢ –ü–æ—Å—Ç (—Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ/–∫–∞—Ä—É—Å–µ–ª—å)\n"
        "‚Ä¢ Reels\n"
        "‚Ä¢ IGTV\n\n"
        "–ü—Ä–∏–º–µ—Ä: https://www.instagram.com/p/Cxyz...\n"
        "–ë–æ—Ç —Å–∫–∞—á–∞–µ—Ç –≤—Å–µ –º–µ–¥–∏–∞ –∏–∑ –ø–æ—Å—Ç–∞, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Å–∫–æ–ª—å–∫–æ.\n\n"
        "–í–∞–∂–Ω–æ: –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Å –ø—É–±–ª–∏—á–Ω—ã–º–∏ –∞–∫–∫–∞—É–Ω—Ç–∞–º–∏!"
    )

async def download_media(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–°–∫–∞—á–∏–≤–∞–µ–º –º–µ–¥–∏–∞ –∏–∑ Instagram –∏—Å–ø–æ–ª—å–∑—É—è Instaloader"""
    url = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Å—Å—ã–ª–∫–∏
    if not re.match(r'https?://(www\.)?instagram\.com/(p|reel|tv)/', url):
        await update.message.reply_text("üîó –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É Instagram")
        return
    
    try:
        msg = await update.message.reply_text("‚è≥ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é —Å—Å—ã–ª–∫—É...")
        
        # –ò–∑–≤–ª–µ–∫–∞–µ–º shortcode –∏–∑ URL
        parts = url.split('/')
        if 'reel' in parts:
            shortcode_index = parts.index('reel')
        elif 'tv' in parts:
            shortcode_index = parts.index('tv')
        else:
            shortcode_index = parts.index('p') if 'p' in parts else -1
        
        if shortcode_index == -1 or shortcode_index + 1 >= len(parts):
            await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å shortcode –∏–∑ —Å—Å—ã–ª–∫–∏")
            return
            
        shortcode = parts[shortcode_index + 1].split('?')[0]  # –£–¥–∞–ª—è–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–ø—Ä–æ—Å–∞
        
        # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
        temp_dir = tempfile.mkdtemp()
        
        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º instaloader –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ—Å—Ç–µ
            L = instaloader.Instaloader(
                dirname_pattern=temp_dir,
                download_pictures=False,
                download_videos=False,
                download_video_thumbnails=False,
                save_metadata=False,
                compress_json=False
            )
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å—Ç
            post = instaloader.Post.from_shortcode(L.context, shortcode)
            
            # –°–ø–∏—Å–æ–∫ URL –º–µ–¥–∏–∞
            media_urls = []
            if post.typename == 'GraphSidecar':
                # –ö–∞—Ä—É—Å–µ–ª—å
                for node in post.get_sidecar_nodes():
                    if node.is_video:
                        media_urls.append(('video', node.video_url))
                    else:
                        media_urls.append(('photo', node.display_url))
            else:
                # –û–¥–∏–Ω–æ—á–Ω—ã–π –ø–æ—Å—Ç
                if post.is_video:
                    media_urls.append(('video', post.video_url))
                else:
                    media_urls.append(('photo', post.url))
            
            if not media_urls:
                await msg.edit_text("‚ùå –ú–µ–¥–∏–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                return
                
            total_media = len(media_urls)
            await msg.edit_text(f"üì• –ù–∞–π–¥–µ–Ω–æ {total_media} –º–µ–¥–∏–∞. –°–∫–∞—á–∏–≤–∞—é...")
            
            # –°–∫–∞—á–∏–≤–∞–µ–º –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥–æ–µ –º–µ–¥–∏–∞
            for index, (media_type, media_url) in enumerate(media_urls):
                # –°–∫–∞—á–∏–≤–∞–µ–º –≤ –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                response = requests.get(media_url, stream=True, timeout=30)
                response.raise_for_status()
                
                # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
                ext = '.mp4' if media_type == 'video' else '.jpg'
                file_path = os.path.join(temp_dir, f"media_{index}{ext}")
                
                with open(file_path, 'wb') as f:
                    for chunk in response.iter_content(chunk_size=8192):
                        f.write(chunk)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
                if media_type == 'video':
                    await update.message.reply_video(
                        video=open(file_path, 'rb'),
                        supports_streaming=True,
                        caption=f"–ú–µ–¥–∏–∞ {index+1}/{total_media}" if total_media > 1 else None
                    )
                else:
                    await update.message.reply_photo(
                        photo=open(file_path, 'rb'),
                        caption=f"–ú–µ–¥–∏–∞ {index+1}/{total_media}" if total_media > 1 else None
                    )
                
                # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
                os.unlink(file_path)
            
            await msg.edit_text("‚úÖ –°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
            
        except instaloader.exceptions.InstaloaderException as e:
            await msg.edit_text(f"‚ùå –û—à–∏–±–∫–∞ Instaloader: {e}")
        except requests.RequestException as e:
            await msg.edit_text(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–µ—Ç–∏: {str(e)}")
        except Exception as e:
            await msg.edit_text(f"‚ö†Ô∏è –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
        finally:
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –ø–∞–ø–∫—É
            shutil.rmtree(temp_dir, ignore_errors=True)
            
    except Exception as e:
        await msg.edit_text(f"‚ö†Ô∏è –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {str(e)}")

async def post_init(application: Application):
    """–§—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø–æ—Å–ª–µ –∑–∞–ø—É—Å–∫–∞"""
    bot_info = await application.bot.get_me()
    print(f"‚úÖ –ë–æ—Ç @{bot_info.username} –∑–∞–ø—É—â–µ–Ω!")

def main():
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞"""
    print("üîÑ –ó–∞–ø—É—Å–∫–∞—é –±–æ—Ç–∞...")
    
    try:
        # –°–æ–∑–¥–∞–µ–º –∏ –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        app = Application.builder().token(TOKEN).post_init(post_init).build()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        app.add_handler(CommandHandler("start", start))
        app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, download_media))
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        app.run_polling()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")

if __name__ == "__main__":
    main()
